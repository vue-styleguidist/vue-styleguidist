// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should enable verbose mode in CleanWebpackPlugin 1`] = `
Array [
  CleanWebpackPlugin {
    "options": Object {
      "allowExternal": false,
      "dry": false,
      "root": "~/scripts/__tests__",
      "verbose": true,
    },
    "paths": Array [
      "build",
    ],
  },
]
`;

exports[`should merge user webpack config 1`] = `
Object {
  "@": "~/src",
  "foo": "bar",
  "rsg-codemirror-theme.css": "codemirror/theme/hl-theme.css",
  "rsg-components": "~/lib/rsg-components",
  "vue$": "vue/dist/vue.esm.js",
}
`;

exports[`should not owerwrite user DefinePlugin 1`] = `
Array [
  DefinePlugin {
    "definitions": Object {
      "process.env.NODE_ENV": "\\"test\\"",
      "process.env.STYLEGUIDIST_ENV": "\\"development\\"",
    },
  },
  DefinePlugin {
    "definitions": Object {
      "process.env.PIZZA": "\\"salami\\"",
    },
  },
]
`;

exports[`should prepend requires as webpack entries 1`] = `
Array [
  "a/b.js",
  "c/d.css",
  "~/lib/index",
  "~/node_modules/react-dev-utils/webpackHotDevClient.js",
]
`;

exports[`should return a development config 1`] = `
Object {
  "entry": Array [
    "~/lib/index",
    "~/node_modules/react-dev-utils/webpackHotDevClient.js",
  ],
  "mode": "development",
  "optimization": Object {
    "minimizer": Array [
      UglifyJsPlugin {
        "options": Object {
          "cache": true,
          "exclude": undefined,
          "extractComments": false,
          "include": undefined,
          "parallel": true,
          "sourceMap": false,
          "test": /\\\\\\.js\\(\\\\\\?\\.\\*\\)\\?\\$/i,
          "uglifyOptions": Object {
            "compress": Object {
              "keep_fnames": true,
              "warnings": false,
            },
            "ecma": 5,
            "ie8": false,
            "mangle": Object {
              "keep_fnames": true,
            },
            "output": Object {
              "comments": /\\^\\\\\\*\\*!\\|@preserve\\|@license\\|@cc_on/,
            },
          },
          "warningsFilter": [Function],
        },
      },
    ],
  },
  "output": Object {
    "chunkFilename": "build/[name].js",
    "filename": "build/[name].bundle.js",
    "path": "~/scripts/__tests__",
  },
  "performance": Object {
    "hints": false,
  },
  "plugins": Array [
    StyleguidistOptionsPlugin {
      "options": Object {
        "editorConfig": Object {
          "theme": "hl-theme",
        },
        "require": Array [],
        "styleguideDir": "~/scripts/__tests__",
        "title": "Style Guide",
      },
      "plugin": [Function],
    },
    MiniHtmlWebpackPlugin {
      "options": Object {
        "context": Object {
          "container": "rsg-root",
          "title": "Style Guide",
          "trimWhitespace": true,
        },
        "template": [Function],
      },
      "plugin": [Function],
    },
    DefinePlugin {
      "definitions": Object {
        "process.env.NODE_ENV": "\\"test\\"",
        "process.env.STYLEGUIDIST_ENV": "\\"development\\"",
      },
    },
    HotModuleReplacementPlugin {
      "fullBuildTimeout": 200,
      "multiStep": undefined,
      "options": Object {},
      "requestTimeout": 10000,
    },
  ],
  "resolve": Object {
    "alias": Object {
      "@": "~/src",
      "rsg-codemirror-theme.css": "codemirror/theme/hl-theme.css",
      "rsg-components": "~/lib/rsg-components",
      "vue$": "vue/dist/vue.esm.js",
    },
    "extensions": Array [
      ".js",
      ".jsx",
      ".json",
    ],
  },
}
`;

exports[`should return a production config 1`] = `
Object {
  "entry": Array [
    "~/lib/index",
  ],
  "mode": "production",
  "optimization": Object {
    "minimizer": Array [
      UglifyJsPlugin {
        "options": Object {
          "cache": true,
          "exclude": undefined,
          "extractComments": false,
          "include": undefined,
          "parallel": true,
          "sourceMap": false,
          "test": /\\\\\\.js\\(\\\\\\?\\.\\*\\)\\?\\$/i,
          "uglifyOptions": Object {
            "compress": Object {
              "keep_fnames": true,
              "warnings": false,
            },
            "ecma": 5,
            "ie8": false,
            "mangle": Object {
              "keep_fnames": true,
            },
            "output": Object {
              "comments": /\\^\\\\\\*\\*!\\|@preserve\\|@license\\|@cc_on/,
            },
          },
          "warningsFilter": [Function],
        },
      },
    ],
  },
  "output": Object {
    "chunkFilename": "build/[name].[chunkhash:8].js",
    "filename": "build/bundle.[chunkhash:8].js",
    "path": "~/scripts/__tests__",
    "publicPath": undefined,
  },
  "performance": Object {
    "hints": false,
  },
  "plugins": Array [
    StyleguidistOptionsPlugin {
      "options": Object {
        "editorConfig": Object {
          "theme": "hl-theme",
        },
        "require": Array [],
        "styleguideDir": "~/scripts/__tests__",
        "title": "Style Guide",
      },
      "plugin": [Function],
    },
    MiniHtmlWebpackPlugin {
      "options": Object {
        "context": Object {
          "container": "rsg-root",
          "title": "Style Guide",
          "trimWhitespace": true,
        },
        "template": [Function],
      },
      "plugin": [Function],
    },
    DefinePlugin {
      "definitions": Object {
        "process.env.NODE_ENV": "\\"test\\"",
        "process.env.STYLEGUIDIST_ENV": "\\"production\\"",
      },
    },
    CleanWebpackPlugin {
      "options": Object {
        "allowExternal": false,
        "dry": false,
        "root": "~/scripts/__tests__",
        "verbose": false,
      },
      "paths": Array [
        "build",
      ],
    },
    Object {
      "apply": [Function],
    },
  ],
  "resolve": Object {
    "alias": Object {
      "@": "~/src",
      "rsg-codemirror-theme.css": "codemirror/theme/hl-theme.css",
      "rsg-components": "~/lib/rsg-components",
      "vue$": "vue/dist/vue.esm.js",
    },
    "extensions": Array [
      ".js",
      ".jsx",
      ".json",
    ],
  },
}
`;

exports[`should use editorConfig theme over highlightTheme 1`] = `
Object {
  "@": "~/src",
  "rsg-codemirror-theme.css": "codemirror/theme/hl-theme.css",
  "rsg-components": "~/lib/rsg-components",
  "vue$": "vue/dist/vue.esm.js",
}
`;
